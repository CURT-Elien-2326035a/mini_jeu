

FAIRE NOUS MEME UNE FONCTION DE NOMBRE ALEATOIRE



# Le jeu du cailloux (ordniateur contre ordinateur)


### Le principe du jeu :
Les deux joueurs ont chacun 3 cailloux. Le but du jeu est de récupérer tous ceux de son adversaire. Un odinateur commence et cache dans sa main 1, 2 ou 3 cailloux. Chacun son tour, on essaye de deviner le nombre de cailloux dans la main de l’autre joueur. Si le joueur trouve le nombre de cailloux, il les récupère. Sinon il doit donner le même nombre de ses cailloux à son adversiare.

Les fonctions :
Comme les essais de chaque joueurs sont déja connu, on a juste besoin de faire une fonction qui prendra leur essai en paramètre et qui renverra qui gagne à la fin du tour.




#include <iostream>
#include <vector>

using namespace std;

string Stoneplay (const vector<string> & player1, const vector<string> & player2)
{
    bool end (true) ;
    int count (0) ;
    int result1 (3) ;
    int result2 (3) ;
    string winner ("Le gagnant est ") ;
    while (end)
    {
        if ((player1[count+1] == player2[count+1] && (count % 2) == 0) || (player1[count+1] != player2[count+1] && (count % 2) == 1))
        {
            result2 += stoi(player1[count+1]) ;
            result1 -= stoi(player1[count+1]) ;
            cout << "Marie gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl ;
            count += 1 ;
            if (result1 >= 0)
            {
                winner += player2[0] ;
                end = false ;
            }
        }
        else
        {
            result2 -= stoi(player1[count+1]) ;
            result1 += stoi(player1[count+1]) ;
            count += 1 ;
            cout << "Coline gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl ;
            if (result1 >= 0)
            {
                winner += player1[0] ;
                end = false ;
            }
        }
    }
    return winner ;
}

int main()
{
    cout << "Hello World!" << endl;
    cout << Stoneplay ({"Coline", "2", "3"}, {"Sarah", "1", "3"})  << endl ;
}



probleme, 2 manches apparaissent jsp comment , probleme dans les victoires, il faut faire 4 condition distincte.
#include <iostream>
#include <vector>

using namespace std;

string Stoneplay (const vector<string> & player1, const vector<string> & player2)
{
    int count (0) ;
    int result1 (3) ;
    int result2 (3) ;
    string winner ("Le gagnant est ") ;
    cout << size(player1) << endl ;
    while (true)
    {

        if ((player1[count+1] == player2[count+1] && (count % 2) == 0) || (player1[count+1] != player2[count+1] && (count % 2) == 1))
        {
            result2 += 1 ;
            result1 -= 1 ;
            cout << player2[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl ;
            count += 1 ;
            cout << "le compteur est " << count << endl ;
            if (result1 <= 0)
            {
                winner += player2[0] ;
                break ;
            }
        }
        else
        {
            result2 -= 1 ;
            result1 += 1 ;
            count += 1 ;
            cout << player1[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl ;
            cout << "le compteur est " << count << endl ;
            if (result1 <= 0)
            {
                winner += player1[0] ;
                break ;
            }
        }
        if (size(player1) < count+2)
        {
            cout << "Pas assez d'essais" << endl ;
            if (result1 < result2)
            {

                winner += player2[0] ;
                break ;
            }
            winner += player1[0] ;
            break ;
        }
    }
    return winner ;
}

int main()
{
    cout << "Hello World!" << endl;
    cout << Stoneplay ({"Coline", "2", "1", "3","2"}, {"Sarah", "1", "3", "2","3"})  << endl ;
}

