#include <iostream>
#include <vector>
#include <string>

using namespace std;

// -----------------------------------------------------------------------------
// ----------------------- Jeux -----------------------
// -----------------------------------------------------------------------------


// ------------ pileOuFace -----------
string pileOuFace (const vector<string> & player1, const vector<string> & player2){
    if (player1[1] == "pile") return player1[0];
    return player2[0];
}

// ------------ shifoumi -----------
string shifoumi(const vector<string> & player1, const vector<string> & player2) {
    //0 pour Pierre, 1 pour Papier, 2 pour Ciseaux
    for (size_t i = 1; i < player1.size(); i = i + 1) {
        if (player1[i] == player2[i]) {
            cout << "Egalite !" << endl;
        }
        else if ((player1[i] == "0" && player2[i] == "2") || (player1[i] == "1" && player2[i] == "0") || (player1[i] == "2" && player2[i] == "1")) {
            return player1[0];
        }
        else {
            return player2[0];
        }
    }
    return "aucun gagant";
}

// ------------ justePrix -----------
string justePrix(const vector<string> & player1, const vector<string> & player2) {
    string nombreSecret = "67";
    for (size_t i = 1; i < player1.size(); i = i + 1) {
        if (player1[i] > nombreSecret) {
            cout <<  player1[0] << " votre nombre est trop grand." << endl;
        }
        else if (player1[i] < nombreSecret) {
            cout <<  player1[0] << " votre nombre est trop petit." << endl;
        }
        if (player2[i] > nombreSecret) {
            cout << player2[0] << " votre nombre est trop grand." << endl;
        }
        else if (player2[i] < nombreSecret) {
            cout << player2[0] << " votre nombre est trop petit." << endl;
        }
        if (player1[i] == nombreSecret) return player1[0];
        if (player2[i] == nombreSecret) return player2[0];
    }
    return "erreur";
}

// ------------ justePrix -----------
string jeuDuCailloux (const vector<string> & player1, const vector<string> & player2)
{
    int count (0) ;
    int result1 (3) ;
    int result2 (3) ;
    string winner ("Le gagnant est ") ;
    while (true)
    {
        if (count % 2 == 0)
        {
            cout << player1[0] << " cache " << player1[count+1] <<" cailloux et " << player2[0] << " pense qu'elle en a cache " << player2[count+1] << endl ;
        }
        else
        {
            cout << player2[0] << " cache " << player2[count+1] <<" cailloux et " << player1[0] << " pense qu'elle en a cache " << player1[count+1] << endl ;
        }
        if ((player1[count+1] == player2[count+1] && (count % 2) == 0) ) // 2 doit deviner, a raison, donc prend le nombre que 1 a caché
        {
            result2 += std::stoi(player1[count+1]) ;
            result1 -= std::stoi(player1[count+1]) ;
            cout << player2[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl << endl ;
            count += 1 ;
        }
        else if(player1[count+1] != player2[count+1] && (count % 2) == 1) // 1 doit deviner, a tord, donc 2 prend le nombre que 2 a caché
        {
            result2 += std::stoi(player2[count+1]) ;
            result1 -= std::stoi(player2[count+1]) ;
            cout << player2[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl << endl ;
            count += 1 ;
        }
        else if ((player1[count+1] == player2[count+1] && (count % 2) == 1) ) // 1 doit deviner, a raison, donc prend le nombre que 2 a caché
        {
            result2 -= std::stoi(player2[count+1]) ;
            result1 += std::stoi(player2[count+1]) ;
            cout << player1[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl << endl ;
            count += 1 ;
        }
        else // 2 doit deviner, a tord,  1 donc prend le nombre que 1 a caché
        {
            result2 -= std::stoi(player1[count+1]) ;
            result1 += std::stoi(player1[count+1]) ;
            count += 1 ;
            cout << player1[0] << " gagne la manche" << endl ;
            cout << result1 << endl << result2 << endl << endl ;
        }
        if (result1 < 1 || result2 < 1)
        {
            winner += player1[0] ;
            return winner ;
        }
    }
    return winner ;
}

// -----------------------------------------------------------------------------
// ----------------------- Tournoi -----------------------
// -----------------------------------------------------------------------------

struct Match {
    string equipe1;
    string equipe2;
    int scoreEquipe1;
    int scoreEquipe2;
};

void afficherResultat(const Match & match) {
    cout << match.equipe1 << " " << match.scoreEquipe1 << " - " << match.scoreEquipe2 << " " << match.equipe2 << endl;
}

// ------------ tournoiSuisse -----------
void tournoiSuisse (const vector<string> & equipes){
    vector<Match> matchs;
    for (size_t i = 0; i < equipes.size(); i = i + 1) {
        for (size_t j = i + 1; j < equipes.size(); j = j + 1) {
            Match match;
            match.equipe1 = equipes[i];
            match.equipe2 = equipes[j];

            match.scoreEquipe1 = 1;
            match.scoreEquipe2 = 2;
            matchs.push_back(match);
        }
    }
    for (const Match & match : matchs) {
        afficherResultat(match);
    }
}


int main() {
    vector<string> equipes = {"Equipe1", "Equipe2", "Equipe3", "Equipe4"};
    tournoiSuisse (equipes);
    /* test jeux
    cout << pileOuFace({"Coline","face"}, {"Marie", "pile"})  << endl ;
    cout << shifoumi({"Coline","1", "2"}, {"Marie", "1", "1"})  << endl ;
    cout << justePrix({"Coline","70", "67"}, {"Marie", "60", "66"})  << endl ;
    cout << jeuDuCailloux({"Coline","2", "3", "3"}, {"Marie", "2", "3", "1"})  << endl ;*/
    return 0;
}
